{"mappings":"AAEA,IAAMA,SAAWC,SAASC,cAAc,SAClCC,KAAOF,SAASC,cAAc,QAE9BE,IAAM,IAAIC,OAAOC,aACjBC,aAAeH,IAAII,iBACrBC,UAAY,IAAIC,aAAaH,aAAaI,SAC1CC,iBAAmB,IAAIF,aAAaH,aAAaI,SAC/CE,YAAcC,MAAMC,KAAKD,MAAM,KAAK,WAAM,OAAA,KAE1CE,MAAQ,WACZC,UAAUC,aACPC,aAAa,CAAEC,OAAO,IACtBC,MAAK,SAACC,GACalB,IAAImB,wBAAwBD,GACpCE,QAAQjB,cAClBkB,aAAY,WACVlB,aAAamB,uBAAuBjB,WACpC,IAAMkB,EAAQC,yBACd5B,SAAS6B,UAAa,GAAmBC,OAAjBH,EAAMI,QAAQ,IAEpC5B,KAAK6B,MAAMC,gBADTN,EAAQ,KACmB,MAEA,UAE9B,OAEJO,OAAM,SAACC,GACNC,MAAM,QAASD,OAIfP,uBAAyB,WAK7B,IAFA,IAAIS,EAAc,EAETC,EAAI,EAAGA,EAAI/B,aAAaI,QAAS2B,IAAK,CAC7C1B,iBAAiB0B,GAAK,EACtB,IAAK,IAAIC,EAAI,EAAGA,EAAIhC,aAAaI,QAAU2B,EAAGC,IAC5C3B,iBAAiB0B,IAAM7B,UAAU8B,GAAK9B,UAAU8B,EAAID,GAEtD,GAAIA,EAAI,GAEJ1B,iBAAiB0B,EAAI,GAAK1B,iBAAiB0B,EAAI,GAAK,GACpD1B,iBAAiB0B,EAAI,GAAK1B,iBAAiB0B,GAAK,IAEhDzB,YAAYwB,GAAeC,EAAI,IAC/BD,GACmBxB,YAAY2B,QAAQ,MAS7C,IAFA,IAAIC,EAAa5B,YAAY,GAEpB6B,EAAI,EAAGA,EAAIL,EAAaK,IAC/BD,GAAc5B,YAAY6B,GAAK7B,YAAY6B,EAAI,GAIjD,OAFAD,GAAcJ,EAEPjC,IAAIuC,WAAaF","sources":["main.js"],"sourcesContent":["// https://stackoverflow.com/questions/69237143/how-do-i-get-the-audio-frequency-from-my-mic-using-javascript\n// Don't listen to high freq sounds (> 10k Hz) for a long time.\nconst freqSpan = document.querySelector(\"#freq\");\nconst body = document.querySelector(\"body\");\n\nconst ctx = new window.AudioContext();\nconst analyzerNode = ctx.createAnalyser();\nlet audioData = new Float32Array(analyzerNode.fftSize);\nlet corrolatedSignal = new Float32Array(analyzerNode.fftSize);\nconst localMaxima = Array.from(Array(10), () => 0);\n\nconst start = () => {\n  navigator.mediaDevices\n    .getUserMedia({ audio: true })\n    .then((stream) => {\n      const micStream = ctx.createMediaStreamSource(stream);\n      micStream.connect(analyzerNode);\n      setInterval(() => {\n        analyzerNode.getFloatTimeDomainData(audioData);\n        const pitch = getAutocorrolatedPitch();\n        freqSpan.innerHTML = `${pitch.toFixed(2)}`;\n        if (pitch > 8600) {\n          body.style.backgroundColor = \"red\";\n        } else {\n          body.style.backgroundColor = \"white\";\n        }\n      }, 30);\n    })\n    .catch((reason) => {\n      alert(\"Error\", reason);\n    });\n};\n\nconst getAutocorrolatedPitch = () => {\n  // First: autocorrolate the signal\n\n  let maximaCount = 0;\n\n  for (let l = 0; l < analyzerNode.fftSize; l++) {\n    corrolatedSignal[l] = 0;\n    for (let i = 0; i < analyzerNode.fftSize - l; i++) {\n      corrolatedSignal[l] += audioData[i] * audioData[i + l];\n    }\n    if (l > 1) {\n      if (\n        corrolatedSignal[l - 2] - corrolatedSignal[l - 1] < 0 &&\n        corrolatedSignal[l - 1] - corrolatedSignal[l] > 0\n      ) {\n        localMaxima[maximaCount] = l - 1;\n        maximaCount++;\n        if (maximaCount >= localMaxima.length) break;\n      }\n    }\n  }\n\n  // Second: find the average distance in samples between maxima\n\n  let maximaMean = localMaxima[0];\n\n  for (let i = 1; i < maximaCount; i++)\n    maximaMean += localMaxima[i] - localMaxima[i - 1];\n\n  maximaMean /= maximaCount;\n\n  return ctx.sampleRate / maximaMean;\n};\n"],"names":["freqSpan","document","querySelector","body","ctx","window","AudioContext","analyzerNode","createAnalyser","audioData","Float32Array","fftSize","corrolatedSignal","localMaxima","Array","from","start","navigator","mediaDevices","getUserMedia","audio","then","stream","createMediaStreamSource","connect","setInterval","getFloatTimeDomainData","pitch","getAutocorrolatedPitch","innerHTML","concat","toFixed","style","backgroundColor","catch","reason","alert","maximaCount","l","i","length","maximaMean","i1","sampleRate"],"version":3,"file":"index.abf75c18.js.map"}